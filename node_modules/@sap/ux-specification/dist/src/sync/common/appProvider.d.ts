import { Application, Manifest as ManifestV2, FioriElementsVersion, PagesBase } from '../../specification/common';
import { AppSettings as AppSettingsV2 } from '../../specification/v2';
import { Files } from './types';
import { ExtensionLogger } from '../..';
export interface Controllers {
    [key: string]: string;
}
export declare abstract class AppProvider {
    readonly app: Application;
    readonly logger: ExtensionLogger;
    private readonly schemas;
    unhandledControllers: Array<string>;
    protected constructor(manifest: ManifestV2, schemas: Files, home: string, pages: PagesBase, version: FioriElementsVersion, settings?: AppSettingsV2, logger?: ExtensionLogger);
    /**
     * Create config files for app (app.json) and pages (pages/{name}.json).
     * This is basically a copy of createFiles optimized to be used in FTFS:
     * it always uses posix path notation with forward slash (/)
     * @param {ConverterOutput} oDataServiceAVT - Complete service information, as returned by annotation vocabularies tool
     * @returns app and page files as separate objects
     */
    createConfigFiles(): {
        appConfig: Files;
        pageConfigs: Files;
    };
}
